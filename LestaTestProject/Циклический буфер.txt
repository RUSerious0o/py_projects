Сравнение релизаций циклического буфера.

Все реализации буфера предусматривают перезапись элементов при переполнении буфера.
1. Буфер, реализованный посредством встроенного в язык контейнера list, имеет фиксированный размер и расположение в памяти
   (касается только элементов самого буфера, но не хранимых значений),
   показывает наименьшую скорость выполнения теста, имеет достаточно простую и интуитивно понятную реализацию;
2. Буфер, реализованный посредством кастомного односвязного списка также имеет фиксированный размер и расположение в памяти,
   быстродействие сопоставимо с первым рассмотренным буфером (немного лучше, в границах математической погрешности).
   Данная реализация немного сложнее предыдущей на стадии подготовки буфера;
3. Буфер, реализованный на двусторонней очереди, показывает наилучшую производительность при добавлении/удалении элементов
   в начало/конец очереди (т.к. deque ровно для этого и предназначен), прост и понятен в реализации. Однако, согласно документации,
   "Once a bounded length deque is full, when new items are added, a corresponding number of items are discarded from the opposite end.",
   а это, вероятнее всего, означает, что если мы хотим, чтобы элементы буфера (ссылки/указатели) не меняли адреса в памяти,
   данная реализация не будет оптимальной.

В конечном итоге, для реализации на языке python, если не углубляться в детали реализации встроенных типов коллекций,
наиболее предпочтительным выглядит буфер на deque, в связи с простым и легко читаемым кодом и наибольшей скоростью
выполнения теста.